spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://10.20.11.62:3306/jeecg-boot?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: goldcard
    #第三方数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      min-idle: 0                #最小连接池数量
      max-active: 100        #最大连接池数量
      initial-size: 10      #数据库连接池初始化连接数
      max-wait: 5000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      validation-query: select 1                #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query-timeout: 1                #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      test-on-borrow:        false        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return:        false        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-while-idle:        true        #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      time-between-eviction-runs-millis: 60000        #1分钟（1.0.14）        有两个含义：
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      min-evictable-idle-time-millis:  300000      #5分钟（1.0.14）        连接保持空闲而不被驱逐的最长时间
      filters:    stat,slf4j          #监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
      clear-filters-enable: false   #属性类型是字符串，通过别名的方式配置扩展插件
      remove-abandoned: true
      remove-abandoned-timeout: 1800
      log-abandoned: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
logging:
  level:
    org:
      springframework:
        orm:
          jpa:  DEBUG
